{"version":3,"file":"static/js/818.e0334638.chunk.js","mappings":"uLAMA,MAyEA,EAzEsBA,KACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KACxCK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,KAC5CO,EAAUC,IAAeR,EAAAA,EAAAA,UAAS,KAClCS,EAAiBC,IAAsBV,EAAAA,EAAAA,UAAS,IACjDW,GAAUC,EAAAA,EAAAA,eAEhBC,EAAAA,EAAAA,YAAU,KACR,GAAIf,EAASgB,OAAS,EACpB,OAGiBC,WACjB,IACE,MAAQC,MAAQA,KAAMC,UAAmBC,EAAAA,EAAMC,IAAIC,IAAAA,IAAWC,eAAiB,gBACvEL,MAAQA,KAAMM,UAAmBJ,EAAAA,EAAMC,IAAIC,IAAAA,IAAWC,eAAiB,kBACvEL,MAAQA,KAAMO,UAAmBL,EAAAA,EAAMC,IAAIC,IAAAA,IAAWC,eAAiB,oBACvEL,MAAQA,KAAMQ,UAAoBN,EAAAA,EAAMC,IAAIC,IAAAA,IAAWC,eAAiB,eACxEL,MAAQA,KAAMS,UAAmBP,EAAAA,EAAMC,IAAIC,IAAAA,IAAWC,eAAiB,qBAE/EnB,EAAae,GACbb,EAAekB,GACfhB,EAAiBiB,GACjBf,EAAYgB,GACZd,EAAmBe,GACnB1B,EAAY,IAAIkB,KAAWK,KAAWC,KAAWC,KAAYC,GAC/D,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,GAGFG,EAAY,GACX,CAAC/B,EAASgB,SAsBb,OACEgB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,KAACG,EAAAA,QAAqB,CACpBC,QAASpC,EACTqC,SAAS,OACTC,UAAU,OACVC,YAAY,SACZC,MAAM,GACNC,SA5BkBD,IACjBA,IAGDrC,EAAUuC,SAASF,IACrB3B,EAAQ8B,KAAK,SAAWH,EAAMI,IAE5BvC,EAAYqC,SAASF,IACvB3B,EAAQ8B,KAAK,WAAaH,EAAMI,IAE9BrC,EAAcmC,SAASF,IACzB3B,EAAQ8B,KAAK,aAAeH,EAAMI,IAEhCnC,EAASiC,SAASF,IACpB3B,EAAQ8B,KAAK,QAAUE,mBAAmBL,EAAMM,OAE9CnC,EAAgB+B,SAASF,IAC3B3B,EAAQ8B,KAAK,eAAiBH,EAAMI,IACtC,EAWIX,UAAU,iCACVc,iBAAe,EACfC,QAAM,KAEJ,C,iLCjEV,MAAMC,EAAgBA,KACpB7B,EAAAA,EAAMC,IAAIC,IAAAA,IAAWC,eAAiB,WACnC2B,MAAK,KAAQC,OAAOC,SAASC,KAAO,GAAG,IACvCC,OAAM1B,IACLuB,OAAOI,MAAM,WAAYC,EAAAA,EAAAA,GAAa5B,GAAO,sFAAsF,GACnI,EAsBN,EAnBqB6B,KACnBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC1B,UAAU,4CAA2CC,SAAA,EACxDF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAIC,KAAI,CAACP,KAAK,6BAA6BQ,SAAS,IAAG3B,UAACF,EAAAA,EAAAA,KAAA,OAAK8B,MAAM,OAAOC,IAAKC,EAAAA,EAAMC,IAAI,0BAA0BC,MAAO,CAAE,aAAc,YAC3IR,EAAAA,EAAAA,MAACC,EAAAA,EAAIC,KAAI,CAACP,KAAK,iCAAiCQ,SAAS,IAAG3B,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACmC,EAAAA,IAAS,CAACC,MAAO,QAAcC,KAAM,GAAIpC,UAAU,8BAA8B,QAChJyB,EAAAA,EAAAA,MAACC,EAAAA,EAAIC,KAAI,CAACP,KAAK,oCAAoCQ,SAAS,KAAI3B,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACsC,EAAAA,IAAS,CAACF,MAAO,QAAcC,KAAM,GAAIpC,UAAU,8BAA8B,QACpJyB,EAAAA,EAAAA,MAACC,EAAAA,EAAIC,KAAI,CAACP,KAAK,kDAAkDQ,SAAS,KAAI3B,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACuC,EAAAA,IAAQ,CAACH,MAAO,QAAcC,KAAM,GAAIpC,UAAU,8BAA8B,QACjKD,EAAAA,EAAAA,KAACjC,EAAAA,EAAa,KACd2D,EAAAA,EAAAA,MAACc,EAAAA,EAAW,CAACC,MAAM,UAAUC,OAAO,OAAOzC,UAAU,qBAAqB0C,YAAU,EAAAzC,SAAA,EAClFF,EAAAA,EAAAA,KAACwC,EAAAA,EAAYI,KAAI,CAACC,GAAIjB,EAAAA,GAAMkB,GAAG,WAAWjB,SAAS,KAAI3B,UAACF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBC,SAAC,gBACxFF,EAAAA,EAAAA,KAACwC,EAAAA,EAAYI,KAAI,CAACC,GAAIjB,EAAAA,GAAMkB,GAAG,iBAAiBjB,SAAS,KAAI3B,UAACF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBC,SAAC,sBAC9FF,EAAAA,EAAAA,KAACwC,EAAAA,EAAYI,KAAI,CAACC,GAAIjB,EAAAA,GAAMkB,GAAG,iBAAiBjB,SAAS,KAAI3B,UAACF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBC,SAAC,sBAC9FF,EAAAA,EAAAA,KAACwC,EAAAA,EAAYI,KAAI,CAACC,GAAIjB,EAAAA,GAAMkB,GAAG,SAASjB,SAAS,KAAI3B,UAACF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBC,SAAC,iBACtFF,EAAAA,EAAAA,KAACwC,EAAAA,EAAYI,KAAI,CAACC,GAAIjB,EAAAA,GAAMkB,GAAG,YAAYjB,SAAS,KAAI3B,UAACF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBC,SAAC,uBACzFF,EAAAA,EAAAA,KAACwC,EAAAA,EAAYO,QAAO,KACpB/C,EAAAA,EAAAA,KAACwC,EAAAA,EAAYI,KAAI,CAACI,QAAS/B,EAAeY,SAAS,KAAI3B,UAACF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBC,SAAC,iBAE1FF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAIC,KAAI,CAACiB,GAAIjB,EAAAA,GAAMkB,GAAG,iBAAiBjB,SAAS,KAAI3B,UAACF,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAACC,QAAQ,UAAUjD,UAAU,qCAAoCC,SAAC,e","sources":["components/MainSearchBar.js","components/AuthNavRight.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport config from './../config'\r\nimport { useHistory } from 'react-router-dom'\r\nimport FormFieldTypeaheadRow from '../components/FormFieldTypeaheadRow'\r\n\r\nconst MainSearchBar = () => {\r\n  const [allNames, setAllNames] = useState([])\r\n  const [taskNames, setTaskNames] = useState([])\r\n  const [methodNames, setMethodNames] = useState([])\r\n  const [platformNames, setPlatformNames] = useState([])\r\n  const [tagNames, setTagNames] = useState([])\r\n  const [submissionNames, setSubmissionNames] = useState([])\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (allNames.length > 0) {\r\n      return\r\n    }\r\n\r\n    const fetchNames = async () => {\r\n      try {\r\n        const { data: { data: tNames } } = await axios.get(config.api.getUriPrefix() + '/task/names')\r\n        const { data: { data: mNames } } = await axios.get(config.api.getUriPrefix() + '/method/names')\r\n        const { data: { data: pNames } } = await axios.get(config.api.getUriPrefix() + '/platform/names')\r\n        const { data: { data: tgNames } } = await axios.get(config.api.getUriPrefix() + '/tag/names')\r\n        const { data: { data: sNames } } = await axios.get(config.api.getUriPrefix() + '/submission/names')\r\n\r\n        setTaskNames(tNames)\r\n        setMethodNames(mNames)\r\n        setPlatformNames(pNames)\r\n        setTagNames(tgNames)\r\n        setSubmissionNames(sNames)\r\n        setAllNames([...tNames, ...mNames, ...pNames, ...tgNames, ...sNames])\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    fetchNames()\r\n  }, [allNames.length])\r\n\r\n  const handleOnSelect = (value) => {\r\n    if (!value) {\r\n      return\r\n    }\r\n    if (taskNames.includes(value)) {\r\n      history.push('/Task/' + value.id)\r\n    }\r\n    if (methodNames.includes(value)) {\r\n      history.push('/Method/' + value.id)\r\n    }\r\n    if (platformNames.includes(value)) {\r\n      history.push('/Platform/' + value.id)\r\n    }\r\n    if (tagNames.includes(value)) {\r\n      history.push('/Tag/' + encodeURIComponent(value.name))\r\n    }\r\n    if (submissionNames.includes(value)) {\r\n      history.push('/Submission/' + value.id)\r\n    }\r\n  }\r\n  return (\r\n    <div className='main-search-bar'>\r\n      <FormFieldTypeaheadRow\r\n        options={allNames}\r\n        labelKey='name'\r\n        inputName='name'\r\n        placeholder='Search'\r\n        value=''\r\n        onSelect={handleOnSelect}\r\n        className='main-search-bar-form-field-row'\r\n        alignLabelRight\r\n        isWide\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainSearchBar\r\n","import React from 'react'\r\nimport { Button, Nav, NavDropdown } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport config from './../config'\r\nimport ErrorHandler from './ErrorHandler'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaDiscord, FaGithub, FaTwitter } from 'react-icons/fa'\r\nimport logo from '../images/uf_logo.svg'\r\nimport MainSearchBar from './MainSearchBar'\r\n\r\nconst handleOnClick = () => {\r\n  axios.get(config.api.getUriPrefix() + '/logout')\r\n    .then(() => { window.location.href = '/' })\r\n    .catch(err => {\r\n      window.alert('Error: ' + ErrorHandler(err) + '\\nSorry, cannot logout. If error persists, clear your site cookies in your browser.')\r\n    })\r\n}\r\n\r\nconst AuthNavRight = () =>\r\n  <Nav className='ml-auto metriq-navbar metriq-navbar-right'>\r\n    <Nav.Link href='https://unitary.foundation' eventKey='8'><img width='96px' src={logo} alt='Unitary Foundation logo' style={{ 'margin-top': '4px' }} /></Nav.Link>\r\n    <Nav.Link href='https://twitter.com/MetriqInfo' eventKey='9'> <FaTwitter color={`${'white'}`} size={25} className='metriq-navbar-social-icon' /> </Nav.Link>\r\n    <Nav.Link href='http://discord.unitary.foundation' eventKey='10'> <FaDiscord color={`${'white'}`} size={25} className='metriq-navbar-social-icon' /> </Nav.Link>\r\n    <Nav.Link href='https://github.com/unitaryfoundation/metriq-app' eventKey='11'> <FaGithub color={`${'white'}`} size={25} className='metriq-navbar-social-icon' /> </Nav.Link>\r\n    <MainSearchBar />\r\n    <NavDropdown title='Account' active='true' className='metriq-navbar-text' alignRight>\r\n      <NavDropdown.Item as={Link} to='/Profile' eventKey='14'><p className='font-weight-bold'>Settings</p></NavDropdown.Item>\r\n      <NavDropdown.Item as={Link} to='/AddSubmission' eventKey='15'><p className='font-weight-bold'>Add Submission</p></NavDropdown.Item>\r\n      <NavDropdown.Item as={Link} to='/MySubmissions' eventKey='16'><p className='font-weight-bold'>My Submissions</p></NavDropdown.Item>\r\n      <NavDropdown.Item as={Link} to='/Token' eventKey='17'><p className='font-weight-bold'>API Token</p></NavDropdown.Item>\r\n      <NavDropdown.Item as={Link} to='/Password' eventKey='18'><p className='font-weight-bold'>Change password</p></NavDropdown.Item>\r\n      <NavDropdown.Divider />\r\n      <NavDropdown.Item onClick={handleOnClick} eventKey='19'><p className='font-weight-bold'>Logout</p></NavDropdown.Item>\r\n    </NavDropdown>\r\n    <Nav.Link as={Link} to='/AddSubmission' eventKey='20'><Button variant='primary' className='metriq-navbar-button submit-button'>Submit</Button></Nav.Link>\r\n  </Nav>\r\n\r\nexport default AuthNavRight\r\n"],"names":["MainSearchBar","allNames","setAllNames","useState","taskNames","setTaskNames","methodNames","setMethodNames","platformNames","setPlatformNames","tagNames","setTagNames","submissionNames","setSubmissionNames","history","useHistory","useEffect","length","async","data","tNames","axios","get","config","getUriPrefix","mNames","pNames","tgNames","sNames","err","console","log","fetchNames","_jsx","className","children","FormFieldTypeaheadRow","options","labelKey","inputName","placeholder","value","onSelect","includes","push","id","encodeURIComponent","name","alignLabelRight","isWide","handleOnClick","then","window","location","href","catch","alert","ErrorHandler","AuthNavRight","_jsxs","Nav","Link","eventKey","width","src","logo","alt","style","FaTwitter","color","size","FaDiscord","FaGithub","NavDropdown","title","active","alignRight","Item","as","to","Divider","onClick","Button","variant"],"sourceRoot":""}